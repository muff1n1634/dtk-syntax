%YAML 1.2
---
name: decomp-toolkit symbols.txt
scope: source.dtk-symbols
version: 2

file_extensions:
  - symbols.txt

variables:
  eabi_section_names: '\.init|extab(?:index)?|\.(?:text|[cd]tors|(?:ro)?data|bss|s?(?:data|bss)2?)'
  section_identifier: '\S+'

  attr_identifier: '\w+'
  symbol_kv_attr_number_value: 'align'

contexts:
  prototype:
    - match: '^\s*(#|//)'
      captures:
        1: comment.line.dtk-splits punctuation.definition.comment.dtk-splits
      push:
        - meta_content_scope: comment.line.dtk-splits
        - match: '$'
          pop: true

  ################
  # main context #
  ################
  main:
    - match: '([^\s=]+)\s*(=)\s*'
      captures:
        1: string.unquoted.symbol.dtk-symbols
        2: punctuation.separator.dtk-symbols
      push:
        - meta_scope: meta.symbol.dtk-symbols
        - include: address

  ###################
  # helper contexts #
  ###################
  pop_at_boundary:
    - match: '(?=\s)'
      pop: 1

  # mostly taken from the C syntax
  numbers:
    # hexadecimal integer
    - match: '\b(0[Xx])([[:xdigit:]]*)'
      scope: meta.number.integer.hexadecimal.dtk-symbols
      captures:
        1: constant.numeric.base.dtk-symbols
        2: constant.numeric.value.dtk-symbols

    # decimal integer
    - match: '\d+'
      scope: meta.number.integer.decimal.dtk-symbols
             constant.numeric.value.dtk-symbols

  ################
  # sub-contexts #
  ################
  address:
    - match: '({{eabi_section_names}})\s*(:)'
      captures:
        1: entity.name.section.dtk-symbols constant.language.section.dtk-symbols
        2: punctuation.separator.dtk-symbols
      push:
        - meta_scope: meta.symbol.address.dtk-symbols
        - include: numbers
        - match: ';'
          scope: punctuation.terminator.dtk-symbols
          set: attribute-list-marker

    - match: '({{section_identifier}})\s*(:)'
      captures:
        1: entity.name.section.dtk-symbols
        2: punctuation.separator.dtk-symbols
      push:
        - meta_scope: meta.symbol.address.dtk-symbols
        - include: numbers
        - match: ';'
          scope: punctuation.terminator.dtk-symbols
          set: attribute-list-marker

  attribute-list-marker:
    - match: '//'
      scope: punctuation.definition.comment.dtk-symbols comment.line.double-slash.dtk-symbols
      set:
        - clear_scopes: 1
        - meta_scope: meta.symbol.attribute-list.dtk-symbols
        - include: attributes

  attributes:
    # special attr: type
    - match: '(type)(:)'
      captures:
        1: entity.other.attribute-name.dtk-symbols keyword.declaration.type.dtk-symbols
        2: punctuation.separator.key-value.dtk-symbols
      push:
        - clear_scopes: 1
        - meta_scope: meta.symbol.attribute-list.attribute.dtk-symbols
        - meta_content_scope: storage.type.dtk-symbols
        - include: pop_at_boundary

    # special attr: size
    - match: '(size)(:)'
      captures:
        1: entity.other.attribute-name.dtk-symbols keyword.other.dtk-symbols
        2: punctuation.separator.key-value.dtk-symbols
      push:
        - clear_scopes: 1
        - meta_scope: meta.symbol.attribute-list.attribute.dtk-symbols
        - include: numbers
        - include: pop_at_boundary

    # number kv-attrs
    - match: '({{symbol_kv_attr_number_value}})(:)'
      captures:
        1: entity.other.attribute-name.dtk-symbols
        2: punctuation.separator.key-value.dtk-symbols
      push:
        - clear_scopes: 1
        - meta_scope: meta.symbol.attribute-list.attribute.dtk-symbols
        - include: numbers
        - include: pop_at_boundary

    # other kv-attrs
    - match: '({{attr_identifier}})(:)'
      captures:
        1: entity.other.attribute-name.dtk-splits
        2: punctuation.separator.dtk-splits
      push:
        - clear_scopes: 1
        - meta_scope: meta.symbol.attribute-list.attribute.dtk-symbols
        - meta_content_scope: string.unquoted.dtk-splits
        - include: pop_at_boundary

    # other k-attrs
    - match: '({{attr_identifier}})'
      scope: meta.symbol.attribute-list.attribute.dtk-symbols entity.other.attribute-name.dtk-splits

    - match: '$'
      pop: 2
